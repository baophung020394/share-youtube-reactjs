{"version":3,"sources":["utils/history.ts","components/Common/NotFound.tsx","api/axiosClient.ts","api/authApi.ts","app/hooks.ts","components/FormFields/InputField.tsx","features/auth/authSlice.ts","components/Common/Header.tsx","components/Common/Sidebar.tsx","features/home/homeSlice.ts","features/home/index.tsx","components/Layout/Admin.tsx","api/youtubeApi.ts","features/home/Share.tsx","App.tsx","features/counter/counterAPI.ts","features/counter/counterSlice.ts","features/auth/authSaga.ts","features/home/homeSaga.ts","app/rootSaga.ts","app/store.ts","serviceWorker.ts","index.tsx"],"names":["history","createBrowserHistory","NotFound","props","axiosClient","axios","create","baseURL","headers","interceptors","request","use","config","error","Promise","reject","response","data","authApi","register","console","log","username","password","post","login","useAppSelector","useSelector","useStyles","makeStyles","theme","createStyles","root","backgroundColor","inputform","maxWidth","minWidth","background","margin","InputField","name","control","label","inputProps","classes","useController","field","value","onChange","onBlur","ref","fieldState","invalid","TextField","className","size","variant","inputRef","helperText","message","initialState","isLoggedIn","logging","currentUser","undefined","isRegister","authSlice","createSlice","reducers","state","action","loginSuccess","payload","loginFailed","logout","registerSuccess","registerFailed","authActions","actions","selectIsLoggedIn","auth","selectCurrentUser","selectIsRegister","authReducer","reducer","header","display","justifyContent","boxShadow","minHeight","title","fontSize","color","cursor","button","padding","marginRight","groupsInput","alignItems","formContainer","boxName","Header","initialValues","onSubmit","dispatch","useDispatch","isLogged","useState","userProfile","setUserProfile","open","setOpen","localStorage","getItem","user","userName","useHistory","useForm","defaultValues","handleSubmit","isSubmitting","formState","handleFormSubmit","formValues","a","useEffect","removeItem","window","location","replace","setItem","token","Alert","IconButton","onClick","severity","AppBar","position","Toolbar","Typography","push","Box","type","Button","disabled","CircularProgress","width","palette","paper","link","textDecoration","selected","youtubeSlide","loading","list","fetchYoutubeList","fetchYoutubeListSuccess","fetchYoutubeListFailed","youtubeActions","selectYoutubeList","youtube","youtubeReducer","main","flexDirection","box","marginBottom","left","flex","right","des","fontStyle","text","Home","listYoutube","map","item","idx","height","src","source","frameBorder","allow","allowFullScreen","spacing","AdminLayout","path","youtubeApi","getAll","get","share","hint","Share","App","exact","to","fetchCount","amount","resolve","setTimeout","incrementAsync","createAsyncThunk","counterSlice","status","increment","decrement","incrementByAmount","incrementSaga","incrementSagaSuccess","extraReducers","builder","addCase","pending","fulfilled","handleLogin","handleLogout","watchLoginFlow","authSaga","call","put","isLoggined","Boolean","take","fork","youtubeSaga","takeLatest","rootSaga","all","rootReducer","combineReducers","router","connectRouter","counter","counterReducer","sagaMiddleware","createSagaMiddleware","store","configureStore","middleware","getDefaultMiddleware","concat","routerMiddleware","run","hostname","match","ReactDOM","render","StrictMode","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ca396906.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\r\n\r\nexport const history = createBrowserHistory();","import React from 'react'\r\n\r\nexport interface NotFoundProps {\r\n  \r\n}\r\n\r\nexport function NotFound (props: NotFoundProps) {\r\n  return (\r\n    <div>\r\n       Not Found\r\n    </div>\r\n  )\r\n}\r\n","import axios, { AxiosRequestConfig, AxiosResponse } from 'axios';\r\n\r\nconst axiosClient = axios.create({\r\n  baseURL: 'https://share-youtube-node.herokuapp.com/api',\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add a request interceptor\r\naxiosClient.interceptors.request.use(\r\n  function (config: AxiosRequestConfig) {\r\n    // Do something before request is sent\r\n    return config;\r\n  },\r\n  function (error) {\r\n    // Do something with request error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Add a response interceptor\r\naxiosClient.interceptors.response.use(\r\n  function (response: AxiosResponse) {\r\n    // Any status code that lie within the range of 2xx cause this function to trigger\r\n    // Do something with response data\r\n    return response.data;\r\n  },\r\n  function (error) {\r\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\r\n    // Do something with response error\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default axiosClient;\r\n","import { LoginPayload } from 'features/auth/authSlice';\r\nimport { ListResponse } from 'models';\r\nimport { User } from 'models/user';\r\nimport axiosClient from './axiosClient';\r\n\r\nconst authApi = {\r\n  register(data: LoginPayload): Promise<ListResponse<User>> {\r\n    const url = '/register';\r\n    console.log('data', data)\r\n    const { username, password } = data;\r\n    return axiosClient.post(url, {\r\n      username,\r\n      password,\r\n    });\r\n  },\r\n\r\n  login(data: LoginPayload): Promise<User> {\r\n    console.log('data', data)\r\n    const url = '/login';\r\n    const { username, password } = data;\r\n    return axiosClient.post(url, {\r\n      username,\r\n      password,\r\n    });\r\n  },\r\n};\r\n\r\nexport default authApi;\r\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { createStyles, makeStyles, TextField, Theme } from '@material-ui/core';\r\nimport React, { InputHTMLAttributes } from 'react';\r\nimport { useController } from 'react-hook-form';\r\nimport { Control } from 'react-hook-form';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: '#ffffff',\r\n    },\r\n    inputform: {\r\n      maxWidth: 200,\r\n      minWidth: 200,\r\n      // minHeight: 60,\r\n      background: '#ffffff',\r\n      margin: '0 20px 0 0',\r\n    },\r\n  })\r\n);\r\n\r\nexport interface InputFieldProps extends InputHTMLAttributes<HTMLInputElement> {\r\n  name: string;\r\n  control: Control<any>;\r\n  label?: string;\r\n}\r\n\r\nexport function InputField({ name, control, label, ...inputProps }: InputFieldProps) {\r\n  const classes = useStyles();\r\n  const {\r\n    field: { value, onChange, onBlur, ref },\r\n    fieldState: { invalid, error },\r\n  } = useController({\r\n    name,\r\n    control,\r\n  });\r\n\r\n  return (\r\n    <TextField\r\n      className={classes.inputform}\r\n      size='small'\r\n      margin='normal'\r\n      value={value}\r\n      onChange={onChange}\r\n      onBlur={onBlur}\r\n      label={label}\r\n      variant='outlined'\r\n      inputRef={ref}\r\n      error={invalid}\r\n      helperText={error?.message}\r\n      inputProps={inputProps}\r\n    />\r\n  );\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { User } from 'models/user';\r\n\r\nexport interface LoginPayload {\r\n  username: string;\r\n  password: string;\r\n}\r\nexport interface AuthState {\r\n  isLoggedIn: boolean;\r\n  logging?: boolean;\r\n  currentUser?: User;\r\n  isRegister: boolean;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  isLoggedIn: false,\r\n  logging: false,\r\n  currentUser: undefined,\r\n  isRegister: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    login(state, action: PayloadAction<LoginPayload>) {\r\n      state.logging = true;\r\n    },\r\n    loginSuccess(state, action: PayloadAction<User>) {\r\n      state.isLoggedIn = true;\r\n      state.logging = false;\r\n      state.currentUser = action.payload;\r\n    },\r\n    loginFailed(state, action: PayloadAction<string>) {\r\n      state.logging = false;\r\n      state.isLoggedIn = false;\r\n    },\r\n\r\n    logout(state) {\r\n      state.isLoggedIn = false;\r\n      state.currentUser = undefined;\r\n    },\r\n    register(state, action: PayloadAction<LoginPayload>) {\r\n      state.isRegister = true;\r\n    },\r\n    registerSuccess(state, action: PayloadAction<User>) {\r\n      state.isRegister = true;\r\n      state.currentUser = action.payload;\r\n    },\r\n    registerFailed(state, action: PayloadAction<string>) {\r\n      state.isRegister = false;\r\n    },\r\n  },\r\n});\r\n\r\n// Actions\r\nexport const authActions = authSlice.actions;\r\n// Selectors\r\nexport const selectIsLoggedIn = (state: any) => state.auth.isLoggedIn;\r\nexport const selectIsLogging = (state: any) => state.auth.logging;\r\nexport const selectCurrentUser = (state: any) => state.auth.currentUser;\r\nexport const selectIsRegister = (state: any) => state.auth.isRegister;\r\n// Reducer\r\nconst authReducer = authSlice.reducer;\r\nexport default authReducer;\r\n","import { Box, CircularProgress, IconButton } from '@material-ui/core';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { Alert } from '@material-ui/lab';\r\nimport authApi from 'api/authApi';\r\nimport { useAppDispatch, useAppSelector } from 'app/hooks';\r\nimport { InputField } from 'components/FormFields';\r\nimport {\r\n  authActions,\r\n  selectCurrentUser,\r\n  selectIsLoggedIn,\r\n  selectIsRegister,\r\n} from 'features/auth/authSlice';\r\nimport { User } from 'models/user';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      backgroundColor: '#ffffff',\r\n    },\r\n    header: {\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n      background: '#ffffff',\r\n      boxShadow:\r\n        '0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)',\r\n      minHeight: 100,\r\n    },\r\n    title: {\r\n      fontSize: 24,\r\n      color: '#000',\r\n      cursor: 'pointer',\r\n    },\r\n    button: {\r\n      backgroundColor: '#ffffff',\r\n      color: '#000',\r\n      padding: '6px 16px',\r\n      marginRight: 10,\r\n      '&:hover': {\r\n        background: '#ffffff',\r\n      },\r\n    },\r\n    groupsInput: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      ' &> .MuiInputBase-root': {\r\n        background: 'red',\r\n      },\r\n    },\r\n    formContainer: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n    },\r\n    name: {\r\n      color:'#000',\r\n      marginRight: 15\r\n    },\r\n    boxName: {\r\n      display: 'flex',\r\n      alignItems: 'center'\r\n    }\r\n  })\r\n);\r\nexport interface LoginFormProps {\r\n  initialValues?: User;\r\n  onSubmit?: (formValues: User) => void;\r\n}\r\n\r\nexport function Header({ initialValues, onSubmit }: LoginFormProps) {\r\n  const classes = useStyles();\r\n  const dispatch = useAppDispatch();\r\n  const isLogged = useAppSelector(selectIsLoggedIn);\r\n  const currentUser = useAppSelector(selectCurrentUser);\r\n  const isRegister = useAppSelector(selectIsRegister);\r\n  const [userProfile, setUserProfile] = useState<any>({});\r\n  const [open, setOpen] = useState(false);\r\n  const [user, setUser] = useState<any>(localStorage.getItem('user'));\r\n  const [userName, setUserName] = useState<any>(localStorage.getItem('username'));\r\n  const history = useHistory();\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = useForm<User>({\r\n    defaultValues: initialValues,\r\n  });\r\n\r\n  const handleFormSubmit = async (formValues: User) => {\r\n    try {\r\n      setUserProfile(formValues);\r\n      dispatch(\r\n        authActions.login({\r\n          username: formValues.username,\r\n          password: formValues.password,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      console.log('Login fail', error);\r\n    }\r\n  };\r\n\r\n  const handleLogoutClick = () => {\r\n    dispatch(authActions.logout());\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('username');\r\n    window.location.replace('/admin/home');\r\n  };\r\n\r\n  const handleShare = () => {\r\n    history.push('/admin/share');\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (currentUser?.error || isRegister) {\r\n      localStorage.removeItem('token');\r\n      authApi.register(userProfile);\r\n      setOpen(true);\r\n      window.location.replace('/admin/home');\r\n    }\r\n    if (isLogged && currentUser) {\r\n      localStorage.setItem('user', currentUser?.token);\r\n      localStorage.setItem('username', currentUser?.name);\r\n    }\r\n    if (currentUser) {\r\n      window.location.replace('/admin/home');\r\n    }\r\n  }, [dispatch, isLogged, currentUser]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {open ? (\r\n        <Alert\r\n          action={\r\n            <IconButton\r\n              aria-label='close'\r\n              color='inherit'\r\n              size='small'\r\n              onClick={() => setOpen(false)}\r\n            >\r\n              X\r\n            </IconButton>\r\n          }\r\n          variant='outlined'\r\n          severity='success'\r\n        >\r\n          Register Success\r\n        </Alert>\r\n      ) : null}\r\n      <AppBar position='static'>\r\n        <Toolbar className={classes.header}>\r\n          <Typography variant='h6' className={classes.title} onClick={() => history.push('/')}>\r\n            Funny Movie\r\n          </Typography>\r\n          <Box className={classes.formContainer}>\r\n            {user === null || user === undefined ? (\r\n              <Box>\r\n                <form onSubmit={handleSubmit(handleFormSubmit)}>\r\n                  <Box className={classes.groupsInput}>\r\n                    <InputField label='Username' control={control} type='text' name='username' />\r\n                    <InputField\r\n                      label='Password'\r\n                      control={control}\r\n                      type='password'\r\n                      name='password'\r\n                    />\r\n                    <Button\r\n                      className={classes.button}\r\n                      type='submit'\r\n                      variant='contained'\r\n                      color='primary'\r\n                      disabled={isSubmitting}\r\n                    >\r\n                      {isSubmitting && <CircularProgress size={16} color='primary' />} Login\r\n                    </Button>\r\n                  </Box>\r\n                </form>\r\n              </Box>\r\n            ) : null}\r\n            <Box className={classes.boxName}>\r\n              {user ? (\r\n                <>\r\n                  <Typography className={classes.name}>Hi {userName && userName}!</Typography>\r\n                  <Button\r\n                    onClick={handleShare}\r\n                    className={classes.button}\r\n                    variant='contained'\r\n                    color='primary'\r\n                  >\r\n                    Share\r\n                  </Button>\r\n                </>\r\n              ) : null}\r\n            </Box>\r\n            <Box>\r\n              {user !== null ? (\r\n                <Button\r\n                  onClick={handleLogoutClick}\r\n                  className={classes.button}\r\n                  variant='contained'\r\n                  color='primary'\r\n                >\r\n                  Logout\r\n                </Button>\r\n              ) : null}\r\n            </Box>\r\n          </Box>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Dashboard, PeopleAlt } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 360,\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  link: {\r\n    // inherit là sử dụng kế thừa từ thằng cha ( cha màu gì nó màu đó)\r\n    color: 'inherit', \r\n    textDecoration: 'none',\r\n    '&.active > div': {\r\n      backgroundColor: theme.palette.action.selected,\r\n    },\r\n  },\r\n}));\r\n\r\nexport function Sidebar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <List component='nav' aria-label='main mailbox folders'>\r\n        <NavLink to='/admin/dashboard' className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <Dashboard />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Dashboard' />\r\n          </ListItem>\r\n        </NavLink>\r\n        <NavLink to='/admin/students' className={classes.link}>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <PeopleAlt />\r\n            </ListItemIcon>\r\n            <ListItemText primary='Students' />\r\n          </ListItem>\r\n        </NavLink>\r\n      </List>\r\n    </div>\r\n  );\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { RootState } from 'app/store';\r\nimport { ListParams, ListResponse, Youtube } from 'models';\r\n\r\nexport interface YoutubeState {\r\n  loading: boolean;\r\n  list: Youtube[];\r\n}\r\n\r\nconst initialState: YoutubeState = {\r\n  loading: false,\r\n  list: [],\r\n};\r\n\r\nconst youtubeSlide = createSlice({\r\n  name: 'youtube',\r\n  initialState,\r\n  reducers: {\r\n    fetchYoutubeList(state) {\r\n      state.loading = true;\r\n    },\r\n    fetchYoutubeListSuccess(state, action: PayloadAction<ListResponse<Youtube>>) {\r\n      console.log('action.payload',action);\r\n      state.list = action.payload.data;\r\n      state.loading = false;\r\n    },\r\n    fetchYoutubeListFailed(state) {\r\n      state.loading = false;\r\n    },\r\n  },\r\n});\r\n\r\n// Actions\r\nexport const youtubeActions = youtubeSlide.actions;\r\n// Selectors\r\nexport const selectYoutubeList = (state: RootState) => state.youtube.list;\r\nexport const selectYoutubeLoading = (state: RootState) => state.youtube.loading;\r\n// Reducer\r\n\r\nconst youtubeReducer = youtubeSlide.reducer;\r\nexport default youtubeReducer;\r\n","import { Box, Theme, Typography } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectYoutubeList, youtubeActions } from './homeSlice';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '80%',\r\n    margin: 'auto',\r\n  },\r\n  main: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  box: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    width: '70%',\r\n    boxShadow:\r\n      '0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)',\r\n    minHeight: 300,\r\n    marginBottom: 10\r\n  },\r\n  left: {\r\n    flex: 1,\r\n  },\r\n  right: {\r\n    flex: 1,\r\n    padding: 10,\r\n  },\r\n  des: {\r\n    fontStyle: 'italic',\r\n  },\r\n  text: {\r\n    fontStyle: 'italic',\r\n  },\r\n}));\r\n\r\nexport function Home() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const listYoutube = useSelector(selectYoutubeList);\r\n\r\n  useEffect(() => {\r\n    dispatch(youtubeActions.fetchYoutubeList());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.main}>\r\n        {listYoutube\r\n          ? listYoutube.map((item, idx) => (\r\n              <Box className={classes.box} key={idx}>\r\n                <Box className={classes.left}>\r\n                  <iframe\r\n                    width='100%'\r\n                    height='100%'\r\n                    src={item.source}\r\n                    title='YouTube video player'\r\n                    frameBorder='0'\r\n                    allow='accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture'\r\n                    allowFullScreen\r\n                  ></iframe>\r\n                </Box>\r\n                <Box className={classes.right}>\r\n                  <Typography variant='h6'>Title {idx + 1}</Typography>\r\n                  <Typography className={classes.des} variant='body2'>\r\n                    Discription:\r\n                  </Typography>\r\n                  <Typography className={classes.text} variant='body2'>\r\n                    Lorem ipsum dolor sit, amet consectetur adipisicing elit. Cumque, similique\r\n                    saepe? Libero numquam sequi voluptatem commodi expedita, ratione non sint,\r\n                    dignissimos quaerat explicabo porro nemo aperiam, omnis ipsum tempora debitis!\r\n                  </Typography>\r\n                </Box>\r\n              </Box>\r\n            ))\r\n          : null}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, makeStyles } from '@material-ui/core';\r\nimport { Header } from 'components/Common';\r\nimport { Home } from 'features/home';\r\nimport Share from 'features/home/Share';\r\nimport React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    width: '100%',\r\n    flexDirection: 'column',\r\n    minHeight: '100vh',\r\n  },\r\n  header: {\r\n    width: '100%',\r\n    backgroundColor: '#ffffff',\r\n  },\r\n  main: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(2, 3),\r\n  },\r\n}));\r\n\r\nexport function AdminLayout() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.main}>\r\n        <Switch>\r\n          <Route path='/admin/home'>\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { ListParams, ListResponse, Youtube } from 'models';\r\nimport axiosClient from './axiosClient';\r\n\r\nconst youtubeApi = {\r\n  getAll(): Promise<ListResponse<Youtube>> {\r\n    const url = '/share/list';\r\n    return axiosClient.get(url);\r\n  },\r\n\r\n  share(data: Youtube): Promise<Youtube> {\r\n    const url = '/share';\r\n    return axiosClient.post(url, data);\r\n  },\r\n};\r\n\r\nexport default youtubeApi;\r\n","import { Box, Button, CircularProgress, makeStyles, Theme, Typography } from '@material-ui/core';\r\nimport authApi from 'api/authApi';\r\nimport youtubeApi from 'api/youtubeApi';\r\nimport { InputField } from 'components/FormFields';\r\nimport React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n  root: {\r\n    width: '80%',\r\n    margin: 'auto',\r\n  },\r\n  main: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    padding: '20px 0',\r\n  },\r\n  box: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    width: '50%',\r\n    boxShadow:\r\n      '0px 3px 1px -2px rgb(0 0 0 / 20%), 0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%)',\r\n    minHeight: 300,\r\n    marginBottom: 10,\r\n    alignItems: 'center',\r\n  },\r\n  groupsInput: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    ' &> .MuiInputBase-root': {\r\n      background: 'red',\r\n    },\r\n    justifyContent: 'center'\r\n  },\r\n  button: {\r\n    backgroundColor: '#ffffff',\r\n    color: '#000',\r\n    padding: '6px 16px',\r\n    marginRight: 10,\r\n    '&:hover': {\r\n      background: '#ffffff',\r\n    },\r\n  },\r\n  hint: {\r\n    fontSize: 14,\r\n    fontStyle: 'italic',\r\n    color: 'grey',\r\n    marginBottom: 10\r\n  }\r\n}));\r\n\r\nexport interface ShareFormProps {\r\n  initialValues?: any;\r\n  onSubmit?: (formValues: any) => void;\r\n}\r\n\r\nexport default function Share({ initialValues, onSubmit }: ShareFormProps) {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n  const {\r\n    control,\r\n    handleSubmit,\r\n    formState: { isSubmitting },\r\n  } = useForm<any>({\r\n    defaultValues: initialValues,\r\n  });\r\n\r\n  const handleFormSubmit = async (formValues: any) => {\r\n    console.log('formValues', formValues);\r\n    try {\r\n      await youtubeApi.share(formValues);\r\n      history.push('/admin/home');\r\n    } catch (error) {\r\n      console.log('Failed to share', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box className={classes.main}>\r\n        <Box className={classes.box}>\r\n          <form onSubmit={handleSubmit(handleFormSubmit)}>\r\n            <Typography className={classes.hint}>Please input like format *https://www.youtube.com/embed/-_X6PhkjpzU</Typography>\r\n            <Box className={classes.groupsInput}>\r\n              <InputField label='Youtube Url' control={control} type='text' name='source' />\r\n              <Button\r\n                className={classes.button}\r\n                type='submit'\r\n                variant='contained'\r\n                color='primary'\r\n                disabled={isSubmitting}\r\n              >\r\n                {isSubmitting && <CircularProgress size={16} color='primary' />} Share\r\n              </Button>\r\n            </Box>\r\n          </form>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box, makeStyles } from '@material-ui/core';\nimport { Header, NotFound } from 'components/Common';\nimport { AdminLayout } from 'components/Layout';\nimport Share from 'features/home/Share';\nimport React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nconst useStyles = makeStyles((theme) => ({\n  header: {\n    width: '100%',\n    backgroundColor: '#ffffff',\n  },\n}));\nfunction App() {\n  const classes = useStyles();\n  return (\n    <div>\n      <Box className={classes.header}>\n        <Header />\n      </Box>\n      <Switch>\n        <Route exact path='/'>\n          <Redirect to='/admin/home' />\n        </Route>\n        <Route path='/admin/home'>\n          <AdminLayout />\n        </Route>\n        <Route path='/admin/share'>\n          <Share />\n        </Route>\n        <Route>\n          <NotFound />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// A mock function to mimic making an async request for data\nexport function fetchCount(amount = 1) {\n  return new Promise<{ data: number }>((resolve) =>\n    setTimeout(() => resolve({ data: amount }), 500)\n  );\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState, AppThunk } from '../../app/store';\nimport { fetchCount } from './counterAPI';\n\nexport interface CounterState {\n  value: number;\n  status: 'idle' | 'loading' | 'failed';\n}\n\nconst initialState: CounterState = {\n  value: 0,\n  status: 'idle',\n};\n\n// The function below is called a thunk and allows us to perform async logic. It\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\n// will call the thunk with the `dispatch` function as the first argument. Async\n// code can then be executed and other actions can be dispatched. Thunks are\n// typically used to make async requests.\nexport const incrementAsync = createAsyncThunk(\n  'counter/fetchCount',\n  async (amount: number) => {\n    const response = await fetchCount(amount);\n    // The value we return becomes the `fulfilled` action payload\n    return response.data;\n  }\n);\n\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState,\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    increment: (state) => {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: (state) => {\n      state.value -= 1;\n    },\n    // Use the PayloadAction type to declare the contents of `action.payload`\n    incrementByAmount: (state, action: PayloadAction<number>) => {\n      state.value += action.payload;\n    },\n    incrementSaga: (state, action: PayloadAction<number>) => {\n      state.status = 'loading';\n    },\n    incrementSagaSuccess: (state, action: PayloadAction<number>) => {\n      state.status = 'idle';\n      state.value += action.payload;\n    },\n  },\n  // The `extraReducers` field lets the slice handle actions defined elsewhere,\n  // including actions generated by createAsyncThunk or in other slices.\n  extraReducers: (builder) => {\n    builder\n      .addCase(incrementAsync.pending, (state) => {\n        state.status = 'loading';\n      })\n      .addCase(incrementAsync.fulfilled, (state, action) => {\n        state.status = 'idle';\n        state.value += action.payload;\n      });\n  },\n});\n\nexport const { increment, decrement, incrementByAmount, incrementSaga, incrementSagaSuccess } = counterSlice.actions;\n\n// The function below is called a selector and allows us to select a value from\n// the state. Selectors can also be defined inline where they're used instead of\n// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`\nexport const selectCount = (state: RootState) => state.counter.value;\n\n// We can also write thunks by hand, which may contain both sync and async logic.\n// Here's an example of conditionally dispatching actions based on current state.\nexport const incrementIfOdd = (amount: number): AppThunk => (\n  dispatch,\n  getState\n) => {\n  const currentValue = selectCount(getState());\n  if (currentValue % 2 === 1) {\n    dispatch(incrementByAmount(amount));\n  }\n};\n\nexport default counterSlice.reducer;\n","import { PayloadAction } from '@reduxjs/toolkit';\r\nimport authApi from 'api/authApi';\r\nimport { push } from 'connected-react-router';\r\nimport { User } from 'models/user';\r\nimport { call, fork, put, take } from 'redux-saga/effects';\r\nimport { authActions, LoginPayload } from './authSlice';\r\n\r\nfunction* handleLogin(payload: LoginPayload) {\r\n  try {\r\n    const response: User = yield call(authApi.login, payload);\r\n    localStorage.setItem('token', response.token);\r\n    yield put(authActions.loginSuccess(response));\r\n    // redirect to admin page\r\n    yield put(push('/admin/home'));\r\n  } catch (error: any) {\r\n    console.log(error);\r\n    yield put(authActions.loginFailed(error.message));\r\n  }\r\n}\r\n\r\nfunction* handleRegister(payload: LoginPayload) {\r\n  try {\r\n    const response: User = yield call(authApi.register, payload);\r\n    localStorage.setItem('token', response.token);\r\n    yield put(authActions.registerSuccess(response));\r\n    // redirect to admin page\r\n    yield put(push('/'));\r\n  } catch (error: any) {\r\n    console.log(error);\r\n    yield put(authActions.registerFailed(error.message));\r\n  }\r\n}\r\n\r\nfunction* handleLogout() {\r\n  // yield delay(500);\r\n  localStorage.removeItem('token');\r\n  yield put(push('/admin/home'));\r\n}\r\n\r\nfunction* watchLoginFlow() {\r\n  while (true) {\r\n    const isLoggined = Boolean(localStorage.getItem('token'));\r\n    const token = localStorage.getItem('token');\r\n    if (!isLoggined) {\r\n      const action: PayloadAction<any> = yield take(authActions.login.type);\r\n      yield fork(handleLogin, action.payload);\r\n    }\r\n    if (token) {\r\n      yield put(push('/admin/home'));\r\n    } \r\n    \r\n    yield take(authActions.logout.type);\r\n    yield call(handleLogout);\r\n  }\r\n}\r\n\r\nexport default function* authSaga() {\r\n  yield fork(watchLoginFlow);\r\n}\r\n","import { PayloadAction } from '@reduxjs/toolkit';\r\nimport youtubeApi from 'api/youtubeApi';\r\nimport { ListParams, ListResponse, Youtube } from 'models';\r\nimport { call, put, takeLatest } from 'redux-saga/effects';\r\nimport { youtubeActions } from './homeSlice';\r\n\r\nfunction* fetchYoutubeList() {\r\n  try {\r\n    const response: ListResponse<Youtube> = yield call(youtubeApi.getAll);\r\n    yield put(youtubeActions.fetchYoutubeListSuccess(response));\r\n  } catch (error:any) {\r\n    console.log('failed to fetch youtube list', error);\r\n    yield put(youtubeActions.fetchYoutubeListFailed());\r\n  }\r\n}\r\n\r\nexport default function* youtubeSaga() {\r\n  // watch fetch youtube action\r\n  yield takeLatest(youtubeActions.fetchYoutubeList, fetchYoutubeList);\r\n}\r\n","import { all } from \"@redux-saga/core/effects\";\r\nimport authSaga from \"features/auth/authSaga\";\r\nimport youtubeSaga from \"features/home/homeSaga\";\r\n\r\nexport default function* rootSaga() {\r\n  yield all([authSaga(), youtubeSaga()])\r\n}\r\n","import { Action, combineReducers, configureStore, ThunkAction } from '@reduxjs/toolkit';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport authReducer from 'features/auth/authSlice';\nimport youtubeReducer from 'features/home/homeSlice';\nimport createSagaMiddleware from 'redux-saga';\nimport { history } from 'utils';\nimport counterReducer from '../features/counter/counterSlice';\nimport rootSaga from './rootSaga';\n\nconst rootReducer = combineReducers({\n  router: connectRouter(history),\n  counter: counterReducer,\n  auth: authReducer,\n  youtube: youtubeReducer,\n});\n\nconst sagaMiddleware = createSagaMiddleware();\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(sagaMiddleware, routerMiddleware(history)),\n});\n\nsagaMiddleware.run(rootSaga);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CssBaseline } from '@material-ui/core';\nimport { ConnectedRouter } from 'connected-react-router';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { history } from 'utils';\nimport App from './App';\nimport { store } from './app/store';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ConnectedRouter history={history}>\n        <CssBaseline />\n        <App />\n      </ConnectedRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}